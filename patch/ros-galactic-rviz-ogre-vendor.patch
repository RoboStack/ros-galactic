diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7a917af8..591cfbae 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -6,13 +6,8 @@ find_package(ament_cmake REQUIRED)
 
 set(PACKAGE_VERSION "1.0.0")
 
-if(WIN32)
-  set(BUILDING_FREETYPE_LOCALLY ON)
-  set(BUILDING_ZLIB_LOCALLY ON)
-else()
-  set(BUILDING_FREETYPE_LOCALLY OFF)
-  set(BUILDING_ZLIB_LOCALLY OFF)
-endif()
+set(BUILDING_FREETYPE_LOCALLY OFF)
+set(BUILDING_ZLIB_LOCALLY OFF)
 
 if(WIN32 AND NOT ${CMAKE_VERBOSE_MAKEFILE})
   set(should_log ON)  # prevent warnings in Windows CI
@@ -217,20 +212,32 @@ if(BUILDING_ZLIB_LOCALLY)
   build_zlib()
 endif()
 
-build_ogre()
+find_package(OGRE)
 
-if(WIN32)
-  ament_environment_hooks(env_hook/rviz_ogre_vendor_library_path.bat)
-  set(ENV_VAR_NAME "PATH")
-  set(ENV_VAR_VALUE "opt\\rviz_ogre_vendor\\bin")
-else()
-  ament_environment_hooks(env_hook/rviz_ogre_vendor_library_path.sh)
-  if(APPLE)
-    set(ENV_VAR_NAME "DYLD_LIBRARY_PATH")
+if(FORCE_BUILD_VENDOR_PKG OR NOT OGRE_FOUND OR "${OGRE_VERSION}" VERSION_LESS 1.12.1)
+  set(RVIZ_OGRE_IS_VENDORBUILD ON)
+  if(BUILDING_FREETYPE_LOCALLY)
+    build_freetype()
+  endif()
+  if(BUILDING_ZLIB_LOCALLY)
+    build_zlib()
+  endif()
+
+  build_ogre()
+
+  if(WIN32)
+    ament_environment_hooks(env_hook/rviz_ogre_vendor_library_path.bat)
+    set(ENV_VAR_NAME "PATH")
+    set(ENV_VAR_VALUE "opt\\rviz_ogre_vendor\\bin")
   else()
-    set(ENV_VAR_NAME "LD_LIBRARY_PATH")
+    ament_environment_hooks(env_hook/rviz_ogre_vendor_library_path.sh)
+    if(APPLE)
+      set(ENV_VAR_NAME "DYLD_LIBRARY_PATH")
+    else()
+      set(ENV_VAR_NAME "LD_LIBRARY_PATH")
+    endif()
+    set(ENV_VAR_VALUE "opt/rviz_ogre_vendor/lib")
   endif()
-  set(ENV_VAR_VALUE "opt/rviz_ogre_vendor/lib")
 endif()
 ament_environment_hooks(env_hook/rviz_ogre_vendor_library_path.dsv.in)
 
diff --git a/rviz_ogre_vendor-extras.cmake.in b/rviz_ogre_vendor-extras.cmake.in
index 786aff99..935ed247 100644
--- a/rviz_ogre_vendor-extras.cmake.in
+++ b/rviz_ogre_vendor-extras.cmake.in
@@ -1,20 +1,26 @@
 # add the local Modules directory to the modules path
-if(WIN32)
-  set(OGRE_DIR "${@PROJECT_NAME@_DIR}/../../../opt/rviz_ogre_vendor/CMake")
-  set(OGRE_CMAKE_MODULE_DIR "${@PROJECT_NAME@_DIR}/../../../opt/rviz_ogre_vendor/CMake")
-  list(INSERT CMAKE_MODULE_PATH 0 ${OGRE_CMAKE_MODULE_DIR})
-  message(STATUS "Prepending to CMAKE_MODULE_PATH: '${OGRE_CMAKE_MODULE_DIR}'")
-elseif(APPLE)
-  set(OGRE_DIR "${@PROJECT_NAME@_DIR}/../../../opt/rviz_ogre_vendor/CMake")
+set (RVIZ_OGRE_IS_VENDORBUILD @RVIZ_OGRE_IS_VENDORBUILD@)
+if (RVIZ_OGRE_IS_VENDORBUILD)
+  if(WIN32)
+    set(OGRE_DIR "${@PROJECT_NAME@_DIR}/../../../opt/rviz_ogre_vendor/CMake")
+    set(OGRE_CMAKE_MODULE_DIR "${@PROJECT_NAME@_DIR}/../../../opt/rviz_ogre_vendor/CMake")
+    list(INSERT CMAKE_MODULE_PATH 0 ${OGRE_CMAKE_MODULE_DIR})
+    message(STATUS "Prepending to CMAKE_MODULE_PATH: '${OGRE_CMAKE_MODULE_DIR}'")
+  elseif(APPLE)
+    set(OGRE_DIR "${@PROJECT_NAME@_DIR}/../../../opt/rviz_ogre_vendor/CMake")
+  else()
+    set(OGRE_DIR "${@PROJECT_NAME@_DIR}/../../../opt/rviz_ogre_vendor/lib/OGRE/cmake")
+  endif()
+  message(STATUS "Setting OGRE_DIR to: '${OGRE_DIR}'")
+
+  set(FREETYPE_HOME "${rviz_ogre_vendor_DIR}/../../../opt/rviz_ogre_vendor")
+  set(ZLIB_HOME "${rviz_ogre_vendor_DIR}/../../../opt/rviz_ogre_vendor")
+
+  find_package(OGRE REQUIRED NO_SYSTEM_ENVIRONMENT_PATH)
 else()
-  set(OGRE_DIR "${@PROJECT_NAME@_DIR}/../../../opt/rviz_ogre_vendor/lib/OGRE/cmake")
+  find_package(OGRE REQUIRED)
 endif()
-message(STATUS "Setting OGRE_DIR to: '${OGRE_DIR}'")
 
-set(FREETYPE_HOME "${rviz_ogre_vendor_DIR}/../../../opt/rviz_ogre_vendor")
-set(ZLIB_HOME "${rviz_ogre_vendor_DIR}/../../../opt/rviz_ogre_vendor")
-
-find_package(OGRE REQUIRED NO_SYSTEM_ENVIRONMENT_PATH)
 message(STATUS "OGRE_LIBRARIES: ${OGRE_LIBRARIES}")
 message(STATUS "OGRE_LIBRARY_DIRS: ${OGRE_LIBRARY_DIRS}")
 message(STATUS "OGRE_PLUGINS: ${OGRE_PLUGINS}")
@@ -97,15 +103,7 @@ foreach(_lib IN LISTS OGRE_LIBRARIES)
       message(FATAL_ERROR "Could not find freetype package")
     endif()
 
-    if(WIN32)
-      if(_ogre_main_static_library_debug_abs)
-        set(ZLIB_LIBRARIES "${ZLIB_HOME}/lib/zlibstaticd.lib")
-      else()
-        set(ZLIB_LIBRARIES "${ZLIB_HOME}/lib/zlibstatic.lib")
-      endif()
-    else()
-      find_package(ZLIB REQUIRED)
-    endif()
+    find_package(ZLIB REQUIRED)
 
     if(NOT ZLIB_LIBRARIES)
       message(FATAL_ERROR "Could not find zlib library")
