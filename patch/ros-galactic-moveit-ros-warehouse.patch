diff --git a/warehouse/CMakeLists.txt b/warehouse/CMakeLists.txt
index ccba905b88..6c72e53c6a 100644
--- a/warehouse/CMakeLists.txt
+++ b/warehouse/CMakeLists.txt
@@ -9,6 +9,9 @@ add_library(${MOVEIT_LIB_NAME} SHARED
   src/state_storage.cpp
   src/warehouse_connector.cpp
 )
+include(GenerateExportHeader)
+generate_export_header(${MOVEIT_LIB_NAME})
+target_include_directories(${MOVEIT_LIB_NAME} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>)
 set_target_properties(${MOVEIT_LIB_NAME} PROPERTIES VERSION "${${PROJECT_NAME}_VERSION}")
 ament_target_dependencies(${MOVEIT_LIB_NAME} rclcpp Boost moveit_core warehouse_ros moveit_ros_planning)
 
@@ -47,3 +50,4 @@ install(
   RUNTIME DESTINATION lib/${PROJECT_NAME}
 )
 install(DIRECTORY include/ DESTINATION include)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${MOVEIT_LIB_NAME}_export.h DESTINATION include)
diff --git a/warehouse/include/moveit/warehouse/constraints_storage.h b/warehouse/include/moveit/warehouse/constraints_storage.h
index bfab2a7f9d..e170bda5cd 100644
--- a/warehouse/include/moveit/warehouse/constraints_storage.h
+++ b/warehouse/include/moveit/warehouse/constraints_storage.h
@@ -40,6 +40,8 @@
 #include <moveit/macros/class_forward.h>
 #include <moveit_msgs/msg/constraints.hpp>
 
+#include "moveit_warehouse_export.h"
+
 namespace moveit_warehouse
 {
 typedef warehouse_ros::MessageWithMetadata<moveit_msgs::msg::Constraints>::ConstPtr ConstraintsWithMetadata;
@@ -47,7 +49,7 @@ typedef warehouse_ros::MessageCollection<moveit_msgs::msg::Constraints>::Ptr Con
 
 MOVEIT_CLASS_FORWARD(ConstraintsStorage);  // Defines ConstraintsStoragePtr, ConstPtr, WeakPtr... etc
 
-class ConstraintsStorage : public MoveItMessageStorage
+class MOVEIT_WAREHOUSE_EXPORT ConstraintsStorage : public MoveItMessageStorage
 {
 public:
   static const std::string DATABASE_NAME;
diff --git a/warehouse/include/moveit/warehouse/planning_scene_storage.h b/warehouse/include/moveit/warehouse/planning_scene_storage.h
index cea20282b6..6b6b633247 100644
--- a/warehouse/include/moveit/warehouse/planning_scene_storage.h
+++ b/warehouse/include/moveit/warehouse/planning_scene_storage.h
@@ -42,6 +42,8 @@
 #include <moveit_msgs/msg/motion_plan_request.hpp>
 #include <moveit_msgs/msg/robot_trajectory.hpp>
 
+#include "moveit_warehouse_export.h"
+
 namespace moveit_warehouse
 {
 typedef warehouse_ros::MessageWithMetadata<moveit_msgs::msg::PlanningScene>::ConstPtr PlanningSceneWithMetadata;
@@ -54,7 +56,7 @@ typedef warehouse_ros::MessageCollection<moveit_msgs::msg::RobotTrajectory>::Ptr
 
 MOVEIT_CLASS_FORWARD(PlanningSceneStorage);  // Defines PlanningSceneStoragePtr, ConstPtr, WeakPtr... etc
 
-class PlanningSceneStorage : public MoveItMessageStorage
+class MOVEIT_WAREHOUSE_EXPORT PlanningSceneStorage : public MoveItMessageStorage
 {
 public:
   static const std::string DATABASE_NAME;
diff --git a/warehouse/include/moveit/warehouse/state_storage.h b/warehouse/include/moveit/warehouse/state_storage.h
index 5f6c66a3e0..952c549945 100644
--- a/warehouse/include/moveit/warehouse/state_storage.h
+++ b/warehouse/include/moveit/warehouse/state_storage.h
@@ -40,6 +40,8 @@
 #include <moveit/macros/class_forward.h>
 #include <moveit_msgs/msg/robot_state.hpp>
 
+#include "moveit_warehouse_export.h"
+
 namespace moveit_warehouse
 {
 typedef warehouse_ros::MessageWithMetadata<moveit_msgs::msg::RobotState>::ConstPtr RobotStateWithMetadata;
@@ -47,7 +49,7 @@ typedef warehouse_ros::MessageCollection<moveit_msgs::msg::RobotState>::Ptr Robo
 
 MOVEIT_CLASS_FORWARD(RobotStateStorage);  // Defines RobotStateStoragePtr, ConstPtr, WeakPtr... etc
 
-class RobotStateStorage : public MoveItMessageStorage
+class MOVEIT_WAREHOUSE_EXPORT RobotStateStorage : public MoveItMessageStorage
 {
 public:
   static const std::string DATABASE_NAME;
diff --git a/warehouse/src/warehouse_connector.cpp b/warehouse/src/warehouse_connector.cpp
index 17096723b3..6c4ffa6386 100644
--- a/warehouse/src/warehouse_connector.cpp
+++ b/warehouse/src/warehouse_connector.cpp
@@ -36,12 +36,25 @@
 
 #include <sys/types.h>
 #include <signal.h>
-#include <unistd.h>
 #include <rclcpp/rclcpp.hpp>
 #include <moveit/warehouse/warehouse_connector.h>
 
 static const rclcpp::Logger LOGGER = rclcpp::get_logger("moveit.ros.warehouse.warehouse_connector");
 
+#ifdef _WIN32
+void kill(int, int)
+{
+  RCLCPP_ERROR(LOGGER, "Warehouse connector not supported on Windows");
+}  // Should never be called
+int fork()
+{
+  RCLCPP_ERROR(LOGGER, "Warehouse connector not supported on Windows");
+  return -1;
+}
+#else
+#include <unistd.h>
+#endif
+
 namespace moveit_warehouse
 {
 WarehouseConnector::WarehouseConnector(const std::string& dbexec) : dbexec_(dbexec), child_pid_(0)
